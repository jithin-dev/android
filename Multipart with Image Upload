// Create Table

// Create PHP code to save to Table

// Create Data Class

// Create API Interface

// POST Method Retrofit

        val progressDialog = ProgressDialog(this@AddDealersActivity)
        progressDialog.setProgressStyle(ProgressDialog.STYLE_SPINNER)
        progressDialog.setTitle("")
        progressDialog.setMessage("Uploading..")
        progressDialog.show()
        progressDialog.setCancelable(false)

        var body: MultipartBody.Part? = null

        if (imageUri != null) {

            val file = uriToFile(imageUri!!)
            val requestFile = file.asRequestBody("image/*".toMediaTypeOrNull())
            body = MultipartBody.Part.createFormData("image", file.name, requestFile)
        }

        val nameRequest = RequestBody.create("text/plain".toMediaTypeOrNull(), name)
        val phoneRequest = RequestBody.create("text/plain".toMediaTypeOrNull(), phone)
        val addressRequest = RequestBody.create("text/plain".toMediaTypeOrNull(), address)
        val latitudeRequest =
            RequestBody.create("text/plain".toMediaTypeOrNull(), latValue)
        val longitudeRequest =
            RequestBody.create("text/plain".toMediaTypeOrNull(), lonValue)

        val call =
            RetrofitClient.apiService.uploadDealer(
                body,
                nameRequest,
                phoneRequest,
                addressRequest,
                latitudeRequest,
                longitudeRequest
            )
        call.enqueue(object : Callback<GeneralResponse> {
            override fun onResponse(
                call: Call<GeneralResponse>,
                response: Response<GeneralResponse>
            ) {

                progressDialog.dismiss()

                if (response.isSuccessful) {
                    println("// Upload successful: ${response.body()}")
                    Toast.makeText(
                        this@AddDealersActivity,
                        "Saved successfully!",
                        Toast.LENGTH_SHORT
                    )
                        .show()

                    setResult(Activity.RESULT_OK)
                    finish()

                } else {
                    println("// Server error: ${response.errorBody()?.string()}")
                    Toast.makeText(this@AddDealersActivity, "Server error", Toast.LENGTH_SHORT)
                        .show()
                }
            }

            override fun onFailure(call: Call<GeneralResponse>, t: Throwable) {
                progressDialog.dismiss()
                println("// Upload failed: ${t.message}")
                Toast.makeText(this@AddDealersActivity, "Upload failed", Toast.LENGTH_SHORT).show()
            }
        })
